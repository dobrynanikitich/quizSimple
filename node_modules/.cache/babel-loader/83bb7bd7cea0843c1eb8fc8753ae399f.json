{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tatianabahmatovic/quizSimple/quizSimple/src/components/quizCard/QuizCard.js\";\nimport React from 'react';\nimport AnswerVariant from '../actualQuizGame/answerVariant/AnswerVariants';\nimport classes from './QuizCard.module.scss';\n\nconst quizCard = ({\n  currentQuizType,\n  currentEl,\n  answers,\n  sortedCountriesList,\n  isRightAnswerDone,\n  checkAnswerHandler\n}) => {\n  let questionBlock;\n\n  switch (currentQuizType) {\n    case 'country':\n      questionBlock = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: sortedCountriesList[currentEl].Flag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 29\n      }, this);\n      break;\n\n    case 'flag':\n      questionBlock = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: sortedCountriesList[currentEl].Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 29\n      }, this);\n      break;\n\n    case 'currency':\n      questionBlock = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: sortedCountriesList[currentEl].Flag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 29\n      }, this);\n      break;\n\n    case 'area':\n      questionBlock = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: sortedCountriesList[currentEl].Flag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.AnswersListWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: currentQuizType === 'flag' ? classes.TextBlock : classes.FlagBlock,\n      children: questionBlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: currentQuizType === 'flag' ? classes.AnswerListFlags : classes.AnwersListText,\n      children: answers.map(item => {\n        return /*#__PURE__*/_jsxDEV(AnswerVariant, {\n          answerVariant: item,\n          checkAnswerHandler: checkAnswerHandler,\n          isCorrectAnswer: item.Name === sortedCountriesList[currentEl].Name,\n          isRightAnswerDone: isRightAnswerDone,\n          currentQuizType: currentQuizType\n        }, item.NativeName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\nexport default quizCard;","map":{"version":3,"sources":["/Users/tatianabahmatovic/quizSimple/quizSimple/src/components/quizCard/QuizCard.js"],"names":["React","AnswerVariant","classes","quizCard","currentQuizType","currentEl","answers","sortedCountriesList","isRightAnswerDone","checkAnswerHandler","questionBlock","Flag","Name","AnswersListWrapper","TextBlock","FlagBlock","AnswerListFlags","AnwersListText","map","item","NativeName"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,gDAA1B;AAEA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA,SAAnB;AAA8BC,EAAAA,OAA9B;AAAuCC,EAAAA,mBAAvC;AAA4DC,EAAAA,iBAA5D;AAA+EC,EAAAA;AAA/E,CAAD,KAAyG;AACtH,MAAIC,aAAJ;;AACA,UAAON,eAAP;AACI,SAAK,SAAL;AACIM,MAAAA,aAAa,gBAAG;AAAK,QAAA,GAAG,EAAEH,mBAAmB,CAACF,SAAD,CAAnB,CAA+BM;AAAzC;AAAA;AAAA;AAAA;AAAA,cAAhB;AACA;;AACJ,SAAK,MAAL;AACID,MAAAA,aAAa,gBAAG;AAAA,kBAAMH,mBAAmB,CAACF,SAAD,CAAnB,CAA+BO;AAArC;AAAA;AAAA;AAAA;AAAA,cAAhB;AACA;;AACJ,SAAK,UAAL;AACIF,MAAAA,aAAa,gBAAG;AAAK,QAAA,GAAG,EAAEH,mBAAmB,CAACF,SAAD,CAAnB,CAA+BM;AAAzC;AAAA;AAAA;AAAA;AAAA,cAAhB;AACA;;AACJ,SAAK,MAAL;AACID,MAAAA,aAAa,gBAAG;AAAK,QAAA,GAAG,EAAEH,mBAAmB,CAACF,SAAD,CAAnB,CAA+BM;AAAzC;AAAA;AAAA;AAAA;AAAA,cAAhB;AAXR;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACW,kBAAxB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAET,eAAe,KAAK,MAApB,GAA6BF,OAAO,CAACY,SAArC,GAAiDZ,OAAO,CAACa,SAAzE;AAAA,gBACML;AADN;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAI,MAAA,SAAS,EAAEN,eAAe,KAAK,MAApB,GAA6BF,OAAO,CAACc,eAArC,GAAuDd,OAAO,CAACe,cAA9E;AAAA,gBAEQX,OAAO,CAACY,GAAR,CAAYC,IAAI,IAAI;AAChB,4BACI,QAAC,aAAD;AAEI,UAAA,aAAa,EAAEA,IAFnB;AAGI,UAAA,kBAAkB,EAAEV,kBAHxB;AAII,UAAA,eAAe,EAAEU,IAAI,CAACP,IAAL,KAAcL,mBAAmB,CAACF,SAAD,CAAnB,CAA+BO,IAJlE;AAKI,UAAA,iBAAiB,EAAEJ,iBALvB;AAMI,UAAA,eAAe,EAAEJ;AANrB,WACSe,IAAI,CAACC,UADd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH,OAXD;AAFR;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAvCD;;AAyCA,eAAejB,QAAf","sourcesContent":["import React from 'react';\n\nimport AnswerVariant from '../actualQuizGame/answerVariant/AnswerVariants';\n\nimport classes from './QuizCard.module.scss';\n\nconst quizCard = ({ currentQuizType, currentEl, answers, sortedCountriesList, isRightAnswerDone, checkAnswerHandler }) => {\n    let questionBlock;\n    switch(currentQuizType) {\n        case 'country':\n            questionBlock = <img src={sortedCountriesList[currentEl].Flag} />\n            break;\n        case 'flag':\n            questionBlock = <div>{sortedCountriesList[currentEl].Name}</div>\n            break;\n        case 'currency':\n            questionBlock = <img src={sortedCountriesList[currentEl].Flag} />\n            break;\n        case 'area':\n            questionBlock = <img src={sortedCountriesList[currentEl].Flag} />\n    }\n\n    return (\n        <div className={classes.AnswersListWrapper}>\n            <div className={currentQuizType === 'flag' ? classes.TextBlock : classes.FlagBlock}>\n                { questionBlock }\n            </div>\n            <ul className={currentQuizType === 'flag' ? classes.AnswerListFlags : classes.AnwersListText}>\n                {\n                    answers.map(item => {\n                        return (\n                            <AnswerVariant \n                                key={item.NativeName} \n                                answerVariant={item} \n                                checkAnswerHandler={checkAnswerHandler}\n                                isCorrectAnswer={item.Name === sortedCountriesList[currentEl].Name}\n                                isRightAnswerDone={isRightAnswerDone}\n                                currentQuizType={currentQuizType}\n                            />\n                        );\n                    })\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default quizCard;"]},"metadata":{},"sourceType":"module"}