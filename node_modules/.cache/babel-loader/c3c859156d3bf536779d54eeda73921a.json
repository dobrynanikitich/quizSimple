{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tatianabahmatovic/quizSimple/quizSimple/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Header from './components/header/Header';\nimport MyRouter from './components/MyRoute';\nimport { override, initialState } from './constants/constants';\nimport classes from './App.module.scss';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.changeState = (prop, value) => {\n      if (prop === 'initialState') {\n        this.setState(initialState, () => {\n          if (this.state.countriesList) {\n            this.setState({\n              isLoading: false\n            });\n          }\n        });\n      } else {\n        this.setState(prevState => ({\n          [prop]: value\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = 'http://countryapi.gear.host/v1/Country/getCountries';\n    fetch(proxyurl + url).then(res => res.json()).then(context => this.setState({\n      countriesList: context.Response,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    const {\n      currentScore,\n      currentQuizType,\n      quizTypes,\n      countriesList,\n      isLoading,\n      isLogin\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.AppWrapper,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          score: currentScore,\n          currentQuizType: currentQuizType,\n          changeState: this.changeState,\n          isLogin: isLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n          css: override,\n          size: 450,\n          color: \"#123abc\",\n          loading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n          className: classes.QuizBlock,\n          children: /*#__PURE__*/_jsxDEV(MyRouter, {\n            countriesList: countriesList,\n            changeState: this.changeState,\n            currentScore: currentScore,\n            currentQuizType: currentQuizType,\n            isLogin: isLogin,\n            quizTypes: quizTypes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tatianabahmatovic/quizSimple/quizSimple/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","ClipLoader","Header","MyRouter","override","initialState","classes","App","state","changeState","prop","value","setState","countriesList","isLoading","prevState","componentDidMount","proxyurl","url","fetch","then","res","json","context","Response","render","currentScore","currentQuizType","quizTypes","isLogin","AppWrapper","QuizBlock"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,OAAOC,MAAP,MAAoB,4BAApB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,uBAAvC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BW,KAD0B,GAClBH,YADkB;;AAAA,SAc1BI,WAd0B,GAcZ,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,UAAID,IAAI,KAAK,cAAb,EAA6B;AAC3B,aAAKE,QAAL,CAAcP,YAAd,EAA4B,MAAM;AAChC,cAAI,KAAKG,KAAL,CAAWK,aAAf,EAA8B;AAC5B,iBAAKD,QAAL,CAAc;AAAEE,cAAAA,SAAS,EAAE;AAAb,aAAd;AACD;AACF,SAJD;AAKD,OAND,MAMO;AACL,aAAKF,QAAL,CAAeG,SAAD,KAAgB;AAC5B,WAACL,IAAD,GAAQC;AADoB,SAAhB,CAAd;AAGD;AACF,KA1ByB;AAAA;;AAG1BK,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,QAAQ,GAAG,sCAAjB;AACA,UAAMC,GAAG,GAAG,qDAAZ;AACAC,IAAAA,KAAK,CAACF,QAAQ,GAAGC,GAAZ,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,OAAO,IAAI,KAAKX,QAAL,CAAc;AAC7BC,MAAAA,aAAa,EAAEU,OAAO,CAACC,QADM;AAE7BV,MAAAA,SAAS,EAAE;AAFkB,KAAd,CAFnB;AAMD;;AAgBDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA,eAAhB;AAAiCC,MAAAA,SAAjC;AAA4Cf,MAAAA,aAA5C;AAA2DC,MAAAA,SAA3D;AAAsEe,MAAAA;AAAtE,QAAkF,KAAKrB,KAA7F;AACA,wBACE,QAAC,MAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEF,OAAO,CAACwB,UAAxB;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAEJ,YADT;AAEE,UAAA,eAAe,EAAEC,eAFnB;AAGE,UAAA,WAAW,EAAE,KAAKlB,WAHpB;AAIE,UAAA,OAAO,EAAEoB;AAJX;AAAA;AAAA;AAAA;AAAA,gBADF,EAQIf,SAAS,gBACN,QAAC,UAAD;AACC,UAAA,GAAG,EAAEV,QADN;AAEC,UAAA,IAAI,EAAE,GAFP;AAGC,UAAA,KAAK,EAAE,SAHR;AAIC,UAAA,OAAO,EAAEU;AAJV;AAAA;AAAA;AAAA;AAAA,gBADM,gBAON;AAAS,UAAA,SAAS,EAAER,OAAO,CAACyB,SAA5B;AAAA,iCACC,QAAC,QAAD;AACE,YAAA,aAAa,EAAElB,aADjB;AAEE,YAAA,WAAW,EAAE,KAAKJ,WAFpB;AAGE,YAAA,YAAY,EAAEiB,YAHhB;AAIE,YAAA,eAAe,EAAEC,eAJnB;AAKE,YAAA,OAAO,EAAEE,OALX;AAME,YAAA,SAAS,EAAED;AANb;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAfP;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AA7DyB;;AAiE5B,eAAerB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nimport Header from  './components/header/Header';\nimport MyRouter from './components/MyRoute';\n\nimport { override, initialState } from './constants/constants';\nimport classes from './App.module.scss';\n\nclass App extends Component {\n  state = initialState;\n\n  componentDidMount() {\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = 'http://countryapi.gear.host/v1/Country/getCountries';\n    fetch(proxyurl + url)\n      .then(res => res.json())\n      .then(context => this.setState({\n        countriesList: context.Response,\n        isLoading: false,\n      }));\n  }\n\n  changeState = (prop, value) => {\n    if (prop === 'initialState') {\n      this.setState(initialState, () => {\n        if (this.state.countriesList) {\n          this.setState({ isLoading: false })\n        }\n      })\n    } else {\n      this.setState((prevState) => ({\n        [prop]: value,\n      }))\n    }\n  }\n\n  render() {\n    const { currentScore, currentQuizType, quizTypes, countriesList, isLoading, isLogin } = this.state;\n    return (\n      <Router>\n        <div className={classes.AppWrapper}>\n          <Header \n            score={currentScore}\n            currentQuizType={currentQuizType}\n            changeState={this.changeState}\n            isLogin={isLogin}\n          />\n          {\n            isLoading ? \n              (<ClipLoader\n                css={override}\n                size={450}\n                color={\"#123abc\"}\n                loading={isLoading}\n              />) :       \n              (<section className={classes.QuizBlock}>\n                <MyRouter \n                  countriesList={countriesList}\n                  changeState={this.changeState}\n                  currentScore={currentScore}\n                  currentQuizType={currentQuizType}\n                  isLogin={isLogin}\n                  quizTypes={quizTypes}\n                />\n              </section>)\n          }\n        </div>\n      </Router>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}